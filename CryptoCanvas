import requests
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

class CryptoCanvas:
    def __init__(self, coingecko_api_url: str = 'https://api.coingecko.com/api/v3'):
        self.api_url = coingecko_api_url

    def get_crypto_details(self, crypto_id: str) -> dict:
        url = f"{self.api_url}/coins/{crypto_id}"
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        else:
            return {"error": "Cryptocurrency not found"}

    def get_price_data(self, crypto_id: str, vs_currency: str = 'usd', days: int = 30) -> pd.DataFrame:
        url = f"{self.api_url}/coins/{crypto_id}/market_chart?vs_currency={vs_currency}&days={days}"
        response = requests.get(url)
        data = response.json()

        prices = data['prices']
        df = pd.DataFrame(prices, columns=['timestamp', 'price'])
        df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
        return df

    def plot_price_data(self, crypto_id: str, vs_currency: str = 'usd', days: int = 30):
        df = self.get_price_data(crypto_id, vs_currency, days)
        plt.figure(figsize=(12, 6))
        plt.plot(df['timestamp'], df['price'])
        plt.title(f'{crypto_id.capitalize()} Price over the last {days} days')
        plt.xlabel('Date')
        plt.ylabel(f'Price ({vs_currency.upper()})')
        plt.grid(True)
        plt.show()

    def manage_portfolio(self, portfolio: dict, vs_currency: str = 'usd', days: int = 30):
        portfolio_df = pd.DataFrame()

        for crypto_id, amount in portfolio.items():
            df = self.get_price_data(crypto_id, vs_currency, days)
            df['crypto_id'] = crypto_id
            df['amount'] = amount
            df['value'] = df['price'] * amount
            portfolio_df = portfolio_df.append(df, ignore_index=True)
        
        portfolio_summary = portfolio_df.groupby('timestamp')['value'].sum().reset_index()
        
        plt.figure(figsize=(12, 6))
        plt.plot(portfolio_summary['timestamp'], portfolio_summary['value'])
        plt.title(f'Portfolio Value over the last {days} days')
        plt.xlabel('Date')
        plt.ylabel(f'Value ({vs_currency.upper()})')
        plt.grid(True)
        plt.show()

        return portfolio_summary

# Example Usage
if __name__ == "__main__":
    crypto_canvas = CryptoCanvas()

    # Fetch Cryptocurrency Details
    crypto_id = 'bitcoin'
    crypto_details = crypto_canvas.get_crypto_details(crypto_id)
    print("Cryptocurrency Details:", crypto_details)

    # Fetch and Plot Price Data
    crypto_canvas.plot_price_data(crypto_id, days=30)

    # Manage and Plot Portfolio
    portfolio = {
        'bitcoin': 0.1,
        'ethereum': 2,
        'cardano': 100
    }
    portfolio_summary = crypto_canvas.manage_portfolio(portfolio, days=30)
    print("Portfolio Summary:")
    print(portfolio_summary)
